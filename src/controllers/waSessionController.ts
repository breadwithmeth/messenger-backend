// üìÅ src/controllers/waSessionController.ts
import { Request, Response } from 'express';
import { startWaSession,  } from '../services/waService';
// import { getQrCodeForSession } from '../config/baileys';

// –°—Ç–∞—Ä—Ç –Ω–æ–≤–æ–π —Å–µ—Å—Å–∏–∏ WhatsApp –¥–ª—è –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –∏ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞
export async function startSessionHandler(req: Request, res: Response) {
  const { organizationId, phoneJid } = req.body;

  if (!organizationId || !phoneJid) {
    return res.status(400).json({ error: 'organizationId –∏ phoneJid –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã' });
  }

  try {
    await startWaSession(organizationId, phoneJid);
    res.status(200).json({ message: '–°–µ—Å—Å–∏—è –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è' });
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Å—Å–∏–∏:', error);
    res.status(500).json({ error: '–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Å—Å–∏—é' });
  }
}

// // –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –∞–∫—Ç–∏–≤–Ω—ã—Ö (–∏ –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö) —Å–µ—Å—Å–∏–π –ø–æ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏
// export async function getSessionsHandler(req: Request, res: Response) {
//   const organizationId = Number(req.params.organizationId);

//   if (!organizationId) {
//     return res.status(400).json({ error: '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π organizationId' });
//   }

//   try {
//     const sessions = await getWaSessions(organizationId);
//     res.json({ sessions });
//   } catch (error) {
//     console.error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–µ—Å—Å–∏–π:', error);
//     res.status(500).json({ error: '–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–µ—Å—Å–∏–∏' });
//   }
// }

// // –ü–æ–ª—É—á–µ–Ω–∏–µ QR-–∫–æ–¥–∞ –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
// export async function getQrHandler(req: Request, res: Response) {
//   const { organizationId, phoneJid } = req.query;

//   if (!organizationId || !phoneJid) {
//     return res.status(400).json({ error: 'organizationId –∏ phoneJid –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã' });
//   }

//   const qr = getQrCodeForSession(Number(organizationId), String(phoneJid));
//   if (!qr) {
//     return res.status(404).json({ error: 'QR –∫–æ–¥ –µ—â—ë –Ω–µ –≥–æ—Ç–æ–≤' });
//   }
//   res.json({ qr });
// }
